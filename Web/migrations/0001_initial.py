# Generated by Django 4.2.7 on 2024-01-29 12:35

import Web.models
import ckeditor.fields
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import embed_video.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AddOn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=25)),
                ('alternative_contact_number', models.CharField(max_length=25)),
                ('passport_number', models.CharField(max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='GroupTour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('from_country', django_countries.fields.CountryField(max_length=2)),
                ('to_country', django_countries.fields.CountryField(max_length=2)),
                ('from_city', models.CharField(choices=[('Abu Dhabi', 'Abu Dhabi'), ('Dubai', 'Dubai'), ('Sharjah', 'Sharjah'), ('Bengaluru', 'Bengaluru'), ('Chennai', 'Chennai'), ('Mumbai', 'Mumbai'), ('Hyderabad', 'Hyderabad'), ('Lucknow', 'Lucknow'), ('Delhi', 'Delhi'), ('Jaipur', 'Jaipur'), ('Ahmedabad', 'Ahmedabad'), ('Kolkata', 'Kolkata'), ('Thiruvananthapuram', 'Thiruvananthapuram')], default='', max_length=50)),
                ('to_city', models.CharField(choices=[('Abu Dhabi', 'Abu Dhabi'), ('Dubai', 'Dubai'), ('Sharjah', 'Sharjah'), ('Tbilisi', 'Tbilisi')], default='', max_length=50)),
                ('days', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)])),
                ('nights', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)])),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('description', ckeditor.fields.RichTextField()),
                ('included', models.TextField()),
                ('not_included', models.TextField()),
                ('total_seats', models.IntegerField()),
                ('remaining_seats', models.IntegerField()),
                ('booking_end_date', models.DateTimeField()),
                ('sold_out', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to=Web.models.upload_path)),
                ('video', embed_video.fields.EmbedVideoField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('people', models.IntegerField()),
                ('price', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('group_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.grouptour')),
            ],
        ),
        migrations.CreateModel(
            name='Itinerary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.SmallIntegerField(validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)])),
                ('date', models.DateField()),
                ('description', ckeditor.fields.RichTextField()),
                ('group_tour', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Web.grouptour')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent', models.BooleanField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=13)),
                ('booking_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=13)),
                ('total_amount_paid', models.BooleanField(default=False)),
                ('booking_amount_paid', models.BooleanField(default=False)),
                ('payment_method', models.CharField(choices=[('Debit/Credit Card', 'Debit/Credit Card')], default='Debit/Credit Card', max_length=50)),
                ('special_request', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Processing', 'Processing'), ('Booked', 'Booked')], default='Processing', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('add_on', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Web.addon')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Web.customer')),
                ('group_tour', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Web.grouptour')),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='Web.package')),
            ],
        ),
        migrations.AddField(
            model_name='addon',
            name='group_tour',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Web.grouptour'),
        ),
    ]
